IL Diff: System.Boolean Celeste.Player::IsRiding(Celeste.Solid)
  IL_0000: ldarg.0
  IL_0001: ldfld Monocle.StateMachine Celeste.Player::StateMachine
  IL_0006: callvirt System.Int32 Monocle.StateMachine::get_State()
  IL_000b: ldc.i4.s 23
  IL_000d: bne.un IL_0014
  IL_0012: ldc.i4.0
  IL_0013: ret
  IL_0014: ldarg.0
  IL_0015: ldfld Monocle.StateMachine Celeste.Player::StateMachine
  IL_001a: callvirt System.Int32 Monocle.StateMachine::get_State()
+ IL_001f: dup @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
+ IL_0020: ldc.i4 6775 @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
+ IL_0025: ldc.i4 7392415 @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
+ IL_002a: call T MonoMod.Utils.DynamicReferenceManager::GetValueTUnsafe<System.Delegate>(System.Int32,System.Int32) @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
  |-> retrieves System.Boolean Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash/<>c__DisplayClass44_0::<Check_State_DreamDash>b__1(System.Int32)
+ IL_002f: call TResult MonoMod.Cil.FastDelegateInvokers::InvokeTypeVal1<System.Boolean,System.Int32>(T0,MonoMod.Cil.FastDelegateInvokers/TypeVal1`2<TResult,T0>) @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
+ IL_0034: brfalse IL_003f @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
+ IL_0039: pop @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
+ IL_003a: br IL_0046 @ Celeste.Mod.CommunalHelper.DashStates.DreamTunnelDash+<>c::<.cctor>b__58_0
  IL_003f: ldc.i4.s 9
  IL_0041: bne.un IL_004e
  IL_0046: ldarg.0
  IL_0047: ldarg.1
  IL_0048: call System.Boolean Monocle.Entity::CollideCheck(Monocle.Entity)
  IL_004d: ret
  IL_004e: ldarg.0
  IL_004f: ldfld Monocle.StateMachine Celeste.Player::StateMachine
  IL_0054: callvirt System.Int32 Monocle.StateMachine::get_State()
  IL_0059: ldc.i4.1
  IL_005a: beq IL_0070
  IL_005f: ldarg.0
  IL_0060: ldfld Monocle.StateMachine Celeste.Player::StateMachine
  IL_0065: callvirt System.Int32 Monocle.StateMachine::get_State()
  IL_006a: ldc.i4.6
  IL_006b: bne.un IL_0094
  IL_0070: ldarg.0
  IL_0071: ldarg.1
  IL_0072: ldarg.0
  IL_0073: ldfld Microsoft.Xna.Framework.Vector2 Monocle.Entity::Position
  IL_0078: call Microsoft.Xna.Framework.Vector2 Microsoft.Xna.Framework.Vector2::get_UnitX()
  IL_007d: ldarg.0
  IL_007e: ldfld Celeste.Facings Celeste.Player::Facing
  IL_0083: conv.r4
  IL_0084: call Microsoft.Xna.Framework.Vector2 Microsoft.Xna.Framework.Vector2::op_Multiply(Microsoft.Xna.Framework.Vector2,System.Single)
  IL_0089: call Microsoft.Xna.Framework.Vector2 Microsoft.Xna.Framework.Vector2::op_Addition(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  IL_008e: call System.Boolean Monocle.Entity::CollideCheck(Monocle.Entity,Microsoft.Xna.Framework.Vector2)
  IL_0093: ret
  IL_0094: ldarg.0
  IL_0095: ldfld System.Int32 Celeste.Player::climbTriggerDir
  IL_009a: brfalse IL_00c3
  IL_009f: ldarg.0
  IL_00a0: ldarg.1
  IL_00a1: ldarg.0
  IL_00a2: ldfld Microsoft.Xna.Framework.Vector2 Monocle.Entity::Position
  IL_00a7: call Microsoft.Xna.Framework.Vector2 Microsoft.Xna.Framework.Vector2::get_UnitX()
  IL_00ac: ldarg.0
  IL_00ad: ldfld System.Int32 Celeste.Player::climbTriggerDir
  IL_00b2: conv.r4
  IL_00b3: call Microsoft.Xna.Framework.Vector2 Microsoft.Xna.Framework.Vector2::op_Multiply(Microsoft.Xna.Framework.Vector2,System.Single)
  IL_00b8: call Microsoft.Xna.Framework.Vector2 Microsoft.Xna.Framework.Vector2::op_Addition(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  IL_00bd: call System.Boolean Monocle.Entity::CollideCheck(Monocle.Entity,Microsoft.Xna.Framework.Vector2)
  IL_00c2: ret
  IL_00c3: ldarg.0
  IL_00c4: ldarg.1
  IL_00c5: call System.Boolean Celeste.Actor::IsRiding(Celeste.Solid)
  IL_00ca: ret
