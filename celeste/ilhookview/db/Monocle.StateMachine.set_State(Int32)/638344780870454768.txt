IL Diff: System.Void Monocle.StateMachine::set_State(System.Int32)
  IL_0000: ldarg.0
  IL_0001: ldfld System.Boolean Monocle.StateMachine::Locked
  IL_0006: brtrue IL_0185
  IL_000b: ldarg.0
  IL_000c: ldfld System.Int32 Monocle.StateMachine::state
  IL_0011: ldarg.1
  IL_0012: beq IL_0185
+ IL_0000: ldarg this @ VivHelper.DashPowerupManager::ForceSetStateOverrideOnPlayerDash
+ IL_0000: dup @ VivHelper.DashPowerupManager::ForceSetStateOverrideOnPlayerDash
+ IL_0000: ldfld System.Int32 Monocle.StateMachine::state @ VivHelper.DashPowerupManager::ForceSetStateOverrideOnPlayerDash
+ IL_0000: ldarg value @ VivHelper.DashPowerupManager::ForceSetStateOverrideOnPlayerDash
+ IL_0000: call System.Int32 VivHelper.DashPowerupManager::OverrideDashCheck(Monocle.StateMachine,System.Int32,System.Int32) @ VivHelper.DashPowerupManager::ForceSetStateOverrideOnPlayerDash
+ IL_0000: starg value @ VivHelper.DashPowerupManager::ForceSetStateOverrideOnPlayerDash
  IL_0017: ldarg.0
  IL_0018: ldfld System.Boolean Monocle.StateMachine::Log
  IL_001d: brfalse.s IL_0067
  IL_001f: ldc.i4.1
  IL_0020: newarr System.Object
  IL_0025: dup
  IL_0026: ldc.i4.0
  IL_0027: ldc.i4.5
  IL_0028: newarr System.Object
  IL_002d: dup
  IL_002e: ldc.i4.0
  IL_002f: ldstr "Enter State "
  IL_0034: stelem.ref
  IL_0035: dup
  IL_0036: ldc.i4.1
  IL_0037: ldarg.1
  IL_0038: box System.Int32
  IL_003d: stelem.ref
  IL_003e: dup
  IL_003f: ldc.i4.2
  IL_0040: ldstr " (leaving "
  IL_0045: stelem.ref
  IL_0046: dup
  IL_0047: ldc.i4.3
  IL_0048: ldarg.0
  IL_0049: ldfld System.Int32 Monocle.StateMachine::state
  IL_004e: box System.Int32
  IL_0053: stelem.ref
  IL_0054: dup
  IL_0055: ldc.i4.4
  IL_0056: ldstr ")"
  IL_005b: stelem.ref
  IL_005c: call System.String System.String::Concat(System.Object[])
  IL_0061: stelem.ref
  IL_0062: call System.Void Monocle.Calc::Log(System.Object[])
  IL_0067: ldarg.0
  IL_0068: ldc.i4.1
  IL_0069: stfld System.Boolean Monocle.StateMachine::ChangedStates
  IL_006e: ldarg.0
  IL_006f: ldarg.0
  IL_0070: ldfld System.Int32 Monocle.StateMachine::state
  IL_0075: callvirt System.Void Monocle.StateMachine::set_PreviousState(System.Int32)
  IL_007a: ldarg.0
  IL_007b: ldarg.1
  IL_007c: stfld System.Int32 Monocle.StateMachine::state
  IL_0081: ldarg.0
  IL_0082: callvirt System.Int32 Monocle.StateMachine::get_PreviousState()
  IL_0087: ldc.i4.m1
  IL_0088: beq.s IL_00d6
  IL_008a: ldarg.0
  IL_008b: ldfld System.Action[] Monocle.StateMachine::ends
  IL_0090: ldarg.0
  IL_0091: callvirt System.Int32 Monocle.StateMachine::get_PreviousState()
  IL_0096: ldelem.ref
  IL_0097: brfalse.s IL_00d6
  IL_0099: ldarg.0
  IL_009a: ldfld System.Boolean Monocle.StateMachine::Log
  IL_009f: brfalse.s IL_00c4
  IL_00a1: ldc.i4.1
  IL_00a2: newarr System.Object
  IL_00a7: dup
  IL_00a8: ldc.i4.0
  IL_00a9: ldstr "Calling End "
  IL_00ae: ldarg.0
  IL_00af: callvirt System.Int32 Monocle.StateMachine::get_PreviousState()
  IL_00b4: box System.Int32
  IL_00b9: call System.String System.String::Concat(System.Object,System.Object)
  IL_00be: stelem.ref
  IL_00bf: call System.Void Monocle.Calc::Log(System.Object[])
  IL_00c4: ldarg.0
  IL_00c5: ldfld System.Action[] Monocle.StateMachine::ends
  IL_00ca: ldarg.0
  IL_00cb: callvirt System.Int32 Monocle.StateMachine::get_PreviousState()
  IL_00d0: ldelem.ref
  IL_00d1: callvirt System.Void System.Action::Invoke()
  IL_00d6: ldarg.0
  IL_00d7: ldfld System.Action[] Monocle.StateMachine::begins
  IL_00dc: ldarg.0
  IL_00dd: ldfld System.Int32 Monocle.StateMachine::state
  IL_00e2: ldelem.ref
  IL_00e3: brfalse.s IL_0122
  IL_00e5: ldarg.0
  IL_00e6: ldfld System.Boolean Monocle.StateMachine::Log
  IL_00eb: brfalse.s IL_0110
  IL_00ed: ldc.i4.1
  IL_00ee: newarr System.Object
  IL_00f3: dup
  IL_00f4: ldc.i4.0
  IL_00f5: ldstr "Calling Begin "
  IL_00fa: ldarg.0
  IL_00fb: ldfld System.Int32 Monocle.StateMachine::state
  IL_0100: box System.Int32
  IL_0105: call System.String System.String::Concat(System.Object,System.Object)
  IL_010a: stelem.ref
  IL_010b: call System.Void Monocle.Calc::Log(System.Object[])
  IL_0110: ldarg.0
  IL_0111: ldfld System.Action[] Monocle.StateMachine::begins
  IL_0116: ldarg.0
  IL_0117: ldfld System.Int32 Monocle.StateMachine::state
  IL_011c: ldelem.ref
  IL_011d: callvirt System.Void System.Action::Invoke()
  IL_0122: ldarg.0
  IL_0123: ldfld System.Func`1<System.Collections.IEnumerator>[] Monocle.StateMachine::coroutines
  IL_0128: ldarg.0
  IL_0129: ldfld System.Int32 Monocle.StateMachine::state
  IL_012e: ldelem.ref
  IL_012f: brfalse.s IL_017a
  IL_0131: ldarg.0
  IL_0132: ldfld System.Boolean Monocle.StateMachine::Log
  IL_0137: brfalse.s IL_015c
  IL_0139: ldc.i4.1
  IL_013a: newarr System.Object
  IL_013f: dup
  IL_0140: ldc.i4.0
  IL_0141: ldstr "Starting Coroutine "
  IL_0146: ldarg.0
  IL_0147: ldfld System.Int32 Monocle.StateMachine::state
  IL_014c: box System.Int32
  IL_0151: call System.String System.String::Concat(System.Object,System.Object)
  IL_0156: stelem.ref
  IL_0157: call System.Void Monocle.Calc::Log(System.Object[])
  IL_015c: ldarg.0
  IL_015d: ldfld Monocle.Coroutine Monocle.StateMachine::currentCoroutine
  IL_0162: ldarg.0
  IL_0163: ldfld System.Func`1<System.Collections.IEnumerator>[] Monocle.StateMachine::coroutines
  IL_0168: ldarg.0
  IL_0169: ldfld System.Int32 Monocle.StateMachine::state
  IL_016e: ldelem.ref
  IL_016f: callvirt TResult System.Func`1<System.Collections.IEnumerator>::Invoke()
  IL_0174: callvirt System.Void Monocle.Coroutine::Replace(System.Collections.IEnumerator)
  IL_0179: ret
  IL_017a: ldarg.0
  IL_017b: ldfld Monocle.Coroutine Monocle.StateMachine::currentCoroutine
  IL_0180: callvirt System.Void Monocle.Coroutine::Cancel()
  IL_0185: ret
