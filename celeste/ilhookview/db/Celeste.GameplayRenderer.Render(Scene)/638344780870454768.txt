IL Diff: System.Void Celeste.GameplayRenderer::Render(Monocle.Scene)
  IL_0000: call System.Void Celeste.GameplayRenderer::Begin()
+ IL_0000: call System.Boolean TAS.EverestInterop.HideGameplay::IsHideGamePlay() @ TAS.EverestInterop.HideGameplay::GameplayRenderer_Render
+ IL_0000: brtrue IL_0025 @ TAS.EverestInterop.HideGameplay::GameplayRenderer_Render
  IL_0005: ldarg.1
  IL_0006: callvirt Monocle.EntityList Monocle.Scene::get_Entities()
  IL_000b: ldsfld Monocle.BitTag Celeste.Tags::HUD
  IL_0010: call System.Int32 Monocle.BitTag::op_Implicit(Monocle.BitTag)
  IL_0015: ldsfld Monocle.BitTag Celeste.TagsExt::SubHUD
  IL_001a: call System.Int32 Monocle.BitTag::op_Implicit(Monocle.BitTag)
  IL_001f: or
+ IL_0000: ldc.i4 2462 @ Celeste.Mod.StrawberryTool.Feature.Detector.DetectorUtils::GameplayRendererOnRender
+ IL_0000: ldc.i4 50058385 @ Celeste.Mod.StrawberryTool.Feature.Detector.DetectorUtils::GameplayRendererOnRender
+ IL_0000: call T MonoMod.Utils.DynamicReferenceManager::GetValueTUnsafe<System.Func`1<System.Int32>>(System.Int32,System.Int32) @ Celeste.Mod.StrawberryTool.Feature.Detector.DetectorUtils::GameplayRendererOnRender
  |-> retrieves System.Int32 Celeste.Mod.StrawberryTool.Feature.Detector.DetectorUtils/<>c::<GameplayRendererOnRender>b__8_3()
+ IL_0000: callvirt TResult System.Func`1<System.Int32>::Invoke() @ Celeste.Mod.StrawberryTool.Feature.Detector.DetectorUtils::GameplayRendererOnRender
+ IL_0000: or @ Celeste.Mod.StrawberryTool.Feature.Detector.DetectorUtils::GameplayRendererOnRender
  IL_0020: callvirt System.Void Monocle.EntityList::RenderExcept(System.Int32)
  IL_0025: ldsfld System.Boolean Celeste.GameplayRenderer::RenderDebug
- IL_002a: brtrue.s IL_0038 @ TAS.EverestInterop.Hitboxes.HitboxToggle::GameplayRendererOnRender
  IL_002c: call Monocle.Commands Monocle.Engine::get_Commands()
  IL_0031: ldfld System.Boolean Monocle.Commands::Open
+ IL_0000: or @ TAS.EverestInterop.Hitboxes.HitboxToggle::GameplayRendererOnRender
+ IL_0000: call System.Boolean TAS.EverestInterop.Hitboxes.HitboxToggle::IsShowHitbox(System.Boolean) @ TAS.EverestInterop.Hitboxes.HitboxToggle::GameplayRendererOnRender
  IL_0036: brfalse.s IL_0049
  IL_0038: ldarg.1
  IL_0039: callvirt Monocle.EntityList Monocle.Scene::get_Entities()
  IL_003e: ldarg.0
  IL_003f: ldfld Monocle.Camera Celeste.GameplayRenderer::Camera
+ IL_0000: call System.Void TAS.EverestInterop.Hitboxes.HitboxFixer::SetDrawingHitboxesTrue() @ TAS.EverestInterop.Hitboxes.HitboxFixer::GameplayRendererOnRender
  IL_0044: callvirt System.Void Monocle.EntityList::DebugRender(Monocle.Camera)
+ IL_0000: call System.Void TAS.EverestInterop.Hitboxes.HitboxFixer::SetDrawingHitboxesFalse() @ TAS.EverestInterop.Hitboxes.HitboxFixer::GameplayRendererOnRender
+ IL_0000: br IL_0049 @ Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger::PatchGameplayRendererRender
+ IL_0000: ldarg.0 @ Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger::PatchGameplayRendererRender
+ IL_0000: ldarg.1 @ Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger::PatchGameplayRendererRender
+ IL_0000: ldc.i4 2450 @ Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger::PatchGameplayRendererRender
+ IL_0000: ldc.i4 40113051 @ Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger::PatchGameplayRendererRender
+ IL_0000: call T MonoMod.Utils.DynamicReferenceManager::GetValueTUnsafe<System.Delegate>(System.Int32,System.Int32) @ Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger::PatchGameplayRendererRender
  |-> retrieves System.Void Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger/<>c::<PatchGameplayRendererRender>b__12_1(Celeste.GameplayRenderer,Monocle.Scene)
+ IL_0000: call System.Void MonoMod.Cil.FastDelegateInvokers::InvokeVoidVal2<Celeste.GameplayRenderer,Monocle.Scene>(T0,T1,MonoMod.Cil.FastDelegateInvokers/VoidVal2`2<T0,T1>) @ Celeste.Mod.CommunalHelper.Triggers.StrawberryJam.ShowHitboxTrigger::PatchGameplayRendererRender
  IL_0049: call System.Void Celeste.GameplayRenderer::End()
  IL_004e: ret
